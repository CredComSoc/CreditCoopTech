openapi: 3.0.0
info:
  version: 1.0.0
  title: "Credit commons: AccountStore service"
  description: Internal API called by Credit Commons reference implementation for managing accounts and balance limits. This API does not specify case-sensitivity. No authentication methods are supplied as this service is assumed to be running locally and access should be restricted that way.
  contact:
    name: Matthew Slater
    url: https://matslats.net/contact
  license:
    name: GNU GPL
paths:
  /{acc_id}:
    head:
      summary: Check if an account exists
      operationId: checkAccount.
      parameters:
        - in: path
          name: acc_id
          description: The name of the account to fetch
          required: true
          schema:
            type: string
      responses:
        "200":
          description: the account exists
        "404":
          description: The account doesn't exist.
    get:
      summary: Get one account.
      operationId: getAccount.
      parameters:
        - in: path
          name: acc_id
          description: The name of the account to fetch
          required: true
          schema:
            type: string
      responses:
        "200":
          description: the account
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Account"
        "404":
          description: The account doesn't exist.
  "/filter/full":
    get:
      summary: Filter account objects
      operationId: filterAccount
      description: Filter accounts, and return full account objects
      parameters:
        - name: fragment
          in: query
          description: the string or fragment to check against account names.
          required: false
          schema:
            type: string
        - name: local
          in: query
          description: Filter for local (TRUE) accounts or remote (FALSE) accounts
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: An array of names
          content:
            "application/json":
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Account"
  "/filter":
    get:
      summary: Filter account names
      operationId: filterName
      description: Filter accounts, and return a list of names
      parameters:
        - name: fragment
          in: query
          description: the string or fragment to check against account names.
          required: false
          schema:
            type: string
        - name: local
          in: query
          description: Filter for local (TRUE) accounts or remote (FALSE) accounts
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: An array of names
          content:
            "application/json":
              schema:
                type: array
                items:
                  type: string
  "/creds/{name}/{auth}":
    get:
      summary: check the username and password for normal accounts.
      operationId: checkCreds
      parameters:
        - name: name
          in: path
          description: The account name.
          required: true
          schema:
            type: string
        - name: auth
          in: path
          description: The account's auth key
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Credentials matched
        "400":
          description: Failed to log in.
components:
  schemas:
    Account:
      type: object
      description: All the ledger needs to know about an account.
      properties:
        name:
          type: string
          description: The name of the account in the ledger
          example: jack99
        min:
          type: number
          description: the minimum allowed balance for an account
          example: -100
        max:
          type: number
          description: the maximum allowed balance for an account
          example: 100
        blocked:
          type: boolean
          description: TRUE if the account is blocked.
          example: false
        admin:
          type: boolean
          description: TRUE if the account is admin.
          example: false
        url:
          type: string
          description: URL of the connected credit commons ledger (remote accounts only)
          example: http://cc.example.com
